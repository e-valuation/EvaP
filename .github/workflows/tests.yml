name: EvaP Test Suite

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test + Coverage

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/setup_evap
        with:
          start-db: true

      - name: Run tests
        run: coverage run manage.py test
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test_shuffled:
    name: Test (shuffled order)

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/setup_evap
        with:
          start-db: true

      - name: Run tests
        run: python manage.py test --shuffle

  test_testdata:
    name: Test if testdata is up to date

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/setup_evap
        with:
          start-db: true
      - name: Create new test_data.json
        run: |
          python manage.py reload_testdata --noinput
          python manage.py dump_testdata
      - name: Check if test_data.json changed
        run: git diff --exit-code

  build_wheel:
    name: Build wheel
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: DeterminateSystems/nix-installer-action@main
      - run: nix run .#build-dist
      - run: tar tvf dist/*.tar.gz
      - run: unzip -l dist/*.whl
      - uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/

  install_wheel:
    name: Install wheel with system Python
    needs: build_wheel
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: actions/download-artifact@v4
        with:
          name: wheel
      - run: pip install *.whl
      - name: Check that "evaluation" section appears in help string
        run: python -m evap --help | grep --fixed-strings "[evaluation]"

  test_frontend:
    name: Test Frontend

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: ./.github/setup_evap
        with:
          shell: .#evap-frontend-dev
          start-db: true

      - name: Compile assets
        run: |
          python manage.py ts compile
          python manage.py scss

      - name: Run tests (shuffled)
        run: coverage run manage.py test --shuffle --tag selenium
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          flags: frontend-tests
          token: ${{ secrets.CODECOV_TOKEN }}

  mypy:
    runs-on: ubuntu-22.04

    name: MyPy

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/setup_evap
      - name: Run MyPy
        run: mypy

  typescript:
    runs-on: ubuntu-22.04
    name: Test Typescript

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/setup_evap
        with:
          npm-ci: true

      - name: Run tests
        run: python manage.py ts test

  linter:
    runs-on: ubuntu-22.04

    name: Linter

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/setup_evap
        with:
          npm-ci: 'true'

      - name: Run ruff
        run: ruff check .
      - name: Run pylint
        run: pylint evap tools
      - name: Run ESLint
        run: |
          cd evap/static/ts
          npx eslint

  formatter:
    runs-on: ubuntu-22.04

    name: Formatting

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/setup_evap
        with:
          npm-ci: true

      - name: Check code formatting
        run: black --check .
      - name: Check imports formatting
        run: isort . --check --diff
      - run: ls -laR evap/static/ts
      - name: Check TypeScript formatting
        run: npx prettier --list-different --log-level debug 'evap/static/ts/**/*.ts'

  backup-process:
    runs-on: ubuntu-22.04

    name: Backup process

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/setup_evap
        with:
          shell: .#evap # no dev-dependencies
          start-db: true

      - name: Install additional dependencies
        run: sudo apt-get update && sudo apt-get install gettext

      - name: GitHub actions has wrong file ownership here, the checkout actions has a problem here (see their 1049)
        run: |
          git config --global --add safe.directory '*'
          sudo -H -u root git config --global --add safe.directory '*'

      - name: Load test data
        run: |
          python manage.py migrate
          python manage.py loaddata test_data
      - name: Backup database
        run: deployment/update_production.sh backup.json
        env:
          EVAP_OVERRIDE_BACKUP_FILENAME: true
          EVAP_SKIP_CHECKOUT: true
      - name: Reload backup
        run: echo "yy" | deployment/load_production_backup.sh backup.json

  macos-nix-build:
    runs-on: macos-14
    name: Build nix environment on MacOS
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/setup_evap
        with:
          start-db: true
