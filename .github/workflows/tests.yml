name: EvaP Test Suite

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test + Coverage

    runs-on: ubuntu-20.04

    container:
      image: python:3.8

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: evap
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Run tests
        run: coverage run manage.py test
      - name: Upload coverage
        uses: codecov/codecov-action@v2

  test_shuffled:
    name: Test (shuffled order)

    runs-on: ubuntu-20.04

    container:
      image: python:3.8

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: evap
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Run tests
        run: python manage.py test --shuffle

  mypy:
    runs-on: ubuntu-20.04

    container:
      image: python:3.8

    name: MyPy

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Run MyPy
        run: mypy -p evap

  linter:
    runs-on: ubuntu-20.04

    container:
      image: python:3.8

    name: Linter

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Run linter
        run: pylint evap -j 0


  formatter:
    runs-on: ubuntu-20.04

    name: Formatting

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: pip install -r requirements-dev.txt
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: Install Node dependencies
        run: npm ci
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Check code formatting
        run: black --check evap
      - name: Check imports formatting
        run: isort . --check --diff
      - run: ls -laR evap/static/ts
      - name: Check TypeScript formatting
        run: npx prettier --list-different --loglevel debug 'evap/static/ts/**/*.ts'


  backup-process:
    runs-on: ubuntu-20.04

    container:
      image: python:3.8

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: evap
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379

    name: Backup process

    steps:
      - name: Install sudo package
        # otherwise, sudo commands in the scripts called will fail
        run: apt update && apt install sudo
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Load test data
        run: |
          python manage.py migrate
          python manage.py loaddata test_data
      - name: Backup database
        run: deployment/update_production.sh backup.json
        env:
          EVAP_OVERRIDE_BACKUP_FILENAME: true
          EVAP_SKIP_CHECKOUT: true
      - name: Reload backup
        run: echo "yy" | deployment/load_production_backup.sh backup.json

  compile_scss:
    runs-on: ubuntu-20.04

    name: Compile Scss

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: Install Node dependencies
        run: npm ci
      - name: Compile Scss
        run: npx sass evap/static/scss/evap.scss evap/static/css/evap.css
      - name: Store Css
        uses: actions/upload-artifact@v2
        with:
          name: css
          path: evap/static/css/evap.css


  render_pages:
    runs-on: ubuntu-20.04

    container:
      image: python:3.8

    name: Render Html pages

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: evap
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Add localsettings
        run: cp evap/settings_test.py evap/localsettings.py
      - name: Render pages
        run: coverage run manage.py ts render_pages
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          flags: render-pages
      - name: Store rendered pages
        uses: actions/upload-artifact@v2
        with:
          name: rendered-pages
          path: evap/static/ts/rendered


  typescript:
    runs-on: ubuntu-20.04

    needs: [ compile_scss, render_pages ]

    name: Test Typescript

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install packages
        run: sudo apt-get install xvfb libgbm1
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: Install Node dependencies
        run: npm ci
      - name: Compile Typescript
        run: npx tsc --project evap/static/ts/tsconfig.compile.json
      - name: Load rendered pages
        uses: actions/download-artifact@v2
        with:
          name: rendered-pages
          path: evap/static/ts/rendered
      - name: Load Css
        uses: actions/download-artifact@v2
        with:
          name: css
          path: evap/static/css
      - name: Run tests
        run: xvfb-run --auto-servernum npx jest
