# Generated by Django 5.2 on 2025-08-12 22:27

import django.db.models.deletion
from django.db import migrations, models


def question_assignments_to_questions(apps, _schema_editor):
    Question = apps.get_model("evaluation", "Question")
    QuestionAssignment = apps.get_model("evaluation", "QuestionAssignment")
    RatingAnswerCounter = apps.get_model("evaluation", "RatingAnswerCounter")
    TextAnswer = apps.get_model("evaluation", "TextAnswer")
    questions = {}
    for question_assignment in QuestionAssignment.objects.all().prefetch_related("question"):
        new_question = question_assignment.question
        questions[question_assignment.pk] = Question(
            text_de=new_question.text_de,
            text_en=new_question.text_en,
            allows_additional_textanswers=new_question.allows_additional_textanswers,
            type=new_question.type,
            questionnaire=question_assignment.questionnaire,
            order=question_assignment.order,
        )
    Question.objects.bulk_create(questions.values())

    def set_question(answer):
        answer.question_id = questions[answer.question_assignment_id].pk
        return answer

    for model in (RatingAnswerCounter, TextAnswer):
        model.objects.bulk_update(
            map(set_question, model.objects.all()),
            fields=["question"],
        )


class Migration(migrations.Migration):
    dependencies = [
        ("evaluation", "0157_temporary_newquestion_relation"),
    ]

    operations = [
        migrations.RunPython(
            code=migrations.RunPython.noop,
            reverse_code=question_assignments_to_questions,
        ),
        migrations.RemoveField(
            model_name="ratinganswercounter",
            name="question",
        ),
        migrations.RemoveField(
            model_name="textanswer",
            name="question",
        ),
        migrations.DeleteModel(
            name="Question",
        ),
        migrations.RenameField(
            model_name="textanswer",
            old_name="question_assignment",
            new_name="question",
        ),
        migrations.RenameField(
            model_name="ratinganswercounter",
            old_name="question_assignment",
            new_name="question",
        ),
        migrations.RenameModel(old_name="NewQuestion", new_name="Question"),
        migrations.RemoveConstraint(
            model_name="question",
            name="check_evaluation_textanswer_or_heading_question_has_no_additional_textanswers_new",
        ),
        migrations.AlterField(
            model_name="questionassignment",
            name="questionnaire",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="question_assignments",
                to="evaluation.questionnaire",
            ),
        ),
        migrations.AlterField(
            model_name="ratinganswercounter",
            name="question",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="evaluation.questionassignment"),
        ),
        migrations.AlterField(
            model_name="textanswer",
            name="question",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="evaluation.questionassignment"),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("type", 0), ("type", 5), _connector="OR", _negated=True),
                    models.Q(("allows_additional_textanswers", True), _negated=True),
                    _connector="OR",
                ),
                name="check_evaluation_textanswer_or_heading_question_has_no_additional_textanswers",
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.CheckConstraint(
                condition=models.Q(("type__in", [0, 1, 12, 2, 6, 7, 8, 9, 10, 11, 3, 4, 5])),
                name="Question_type_choices",
            ),
        ),
    ]
